package Shildt_Lesson.src.Lesson.Chapter_1;
// стр 40
/*
Это простой пример программы на Java.
 */
public class Example {
    //Выполнение программы на Java начинается с вызова метода main ()
    public static void main(String[] args) {
        System.out.println("Java правит Интернетом! ");
    }
}
//В Java файл с исходным кодом формально называется единицей компиляции.
 //Как упоминалось ранее, в терминологии Java подпрограммы принято называть методами.

//Ключевое слово public называется модификатором доступа. Модификатор
//доступа определяет правила обращения к членам класса из других частей
//программы. Если член класса предваряется ключевым словом public, то к нему
//можно обращаться за пределами класса. (В отличие от public, модификатор
//доступа private запрещает доступ к членам класса за его пределами.)

//Ключевое слово void сообщает компилятору о том, что метод ...() не возвращает никаких значений.

//    Любая информация, которую вам нужно передать методу, получается
//       переменными, указанными в наборе круглых скобок после имени метода. Такие
//        переменные называются параметрами.

//В объектах типа String хранятся последовательности символов.

//System.out — это объект, инкапсулирующий вывод на консоль.

//Еще один момент: main ( ) - это просто стартовая точка для вашей
//программы. Сложная программа будет иметь десятки классов, только один из
//которых должен иметь метод main ( ) , чтобы начать работу. Кроме того, для
//некоторых типов программ метод main ( ) вообще не нужен