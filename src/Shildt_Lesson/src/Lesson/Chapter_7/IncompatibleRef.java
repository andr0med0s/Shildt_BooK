// package Lesson.Chapter_7;

// /*
//  * Глава 7. Наследование 287
//  * Ссылки на суперкласс и объекты подклассов
//  * Ранее уже упоминалось о том,  что Java является  строго типизированным языком  программирования.  Помимо стандартных преобразований  и  автоматического повышения простых типов данных, в этом языке четко соблюдается принцип совместимости типов. Это означает, что переменная, ссылающаяся на объект класса одного типа, как правило, не может ссылаться на объект класса другого типа. В качестве примера рассмотрим следующую простую программу
//  */

// // Этот код не пройдет компиляцию

// class X {

//   int a;

//   X(int i) {
//     a = i;
//   }
// }

// class Y {

//   int a;

//   Y(int i) {
//     a = i;
//   }
// }

// public class IncompatibleRef {

//   public static void main(String[] args) {
//     X x = new X(10);
//     X x2;
//     Y у = new Y(5);
//     x2 = x; // допустимо,  поскольку обе переменные одного типа
//     х2 = у;  // ошибка,  поскольку переменные разных типов
//   }
// }
// /*
//  * Несмотря на то что классы X и Y содержат одинаковые члены, переменной типа X невозможно присвоить ссылку на объект типа Y, поскольку типы объектов отличаются. Вообще говоря, ссылочная переменная может указывать только на объекты своего типа.
//  */



