package Shildt_Lesson.src.Lesson.Chapter_4;

//------Полное руководство стр 181
// Этот класс реализует стек целых чисел, который может хранить 10 значений

/*
* Стек сохраняет данные по принципу "последний пришел - первым обслужен';
* Стеки управляются с помощью двух операций, традиционно называемых
* помещением и извлечением. Чтобы сохранить элемент на верхушке стека,
*  будет применяться помещение. Чтобы взять элемент из стека, будет
*  использоваться извлечение.
* */
class Stack {
    int[] stck = new int[10];
    int tos;

    // Инициализировать верхушку стека.
    Stack() {
        tos = -1;
    }

    // Поместить элемент в стек.
    void push(int item) {
        if (tos == 9) {
            System.out.println("Cтeк полон. ");
        } else
            stck[++tos] = item;
    }

    // Извлечь элемент из стека.
    int рор() {
        if (tos < 0) {
            System.out.println("Cтeк опустошен. ");
            return 0;
        } else
            return stck[tos--];
    }
}

/*
* Здесь видно, что в классе Stack определены два элемента данных, два ме-
тода и конструктор. Стек целых чисел хранится в массиве stck. Этот массив
индексируется переменной tos, которая всегда содержит индекс верхушки
стека. Конструктор Stack() инициализирует tos значением -1, что указы-
вает на пустой стек. Метод push() помещает элемент в стек. Для получения
элемента предназначен метод рор(). Так как доступ к стек у осуществляется
через методы push() и рор() , тот факт, что стек хранится в массиве, на са-
мом деле не имеет отношения к использованию стека. Например, стек может
храниться в более сложной структуре данных, такой как связный список, но
интерфейс, определяемый методами push() и рор() , останется прежним.
* */

class TestStack {
    public static void main(String[] args) {
        Stack mystack1 = new Stack();
        Stack mystack2 = new Stack();
// Поместить несколько чисел в стеки.
        for (int i = 0; i < 10; i++) mystack1.push(i);
        for (int i = 10; i < 20; i++) mystack2.push(i);
// Извлечь эти числа из стеков.
        System.out.println("Cтeк в mystack1 : ");
        for (int i = 0; i < 10; i++)
            System.out.println(mystack1.рор());
        System.out.println("Стек в mystack2 : ");
        for (int i = 0; i < 10; i++)
            System.out.println(mystack2.рор());
    }
}

