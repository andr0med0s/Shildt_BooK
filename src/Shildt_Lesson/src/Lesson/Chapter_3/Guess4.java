package Lesson.Chapter_3;
//стр 122
//  Игра в угадывание букв, четвертая версии
class Guess4 {
    public static void main(String[] args) 
        throws java.io.IOException {
        
        char ch, ignore, answer = 'K';

        do{
            System.out.println("Задумана буква из диапазона A - Z.");
            System.out.println("Попытайтесь ее угадать: ");

            // Получение символа с клавиатуры
            ch = (char) System.in.read();

            // Отбрасывание всех остальных символов во входном буфере
            do {
                ignore = (char) System.in.read();
            } while(ignore != '\n');
/*
Как пояснялось ранее, консольный ввод буферизуется построчно, т.е. для передачи символов,
вводимых с клавиатуры, приходится нажимать клавишу <Enter>, что приводит к формированию
последовательности символов перевода строки и возврата каретки. Эти символы сохраняются
во входном буфере вместе с символами, введенными с клавиатуры. Кроме того, если ввести
с клавиатуры несколько символов подряд, не нажав клавишу <Enter>, то они так и останутся
во входном буфере.
В рассматриваемом здесь цикле эти символы отбрасываются до тех пор,
 пока не достигается конец строки. Если не сделать этого, лишние символы будут
  передаваться программе в качестве выбранной буквы, что не соответствует действительности.
   (Для того чтобы убедиться в этом, попробуйте закомментировать внутренний цикл
   do-while в исходном коде программы.)
*/ 


            if(ch == answer) System.out.println("** Правильно! **");
            else {
                System.out.println("...Извините, нужная буква находится ");
                if(ch < answer) System.out.println("ближе к концу алфавита");
                else System.out.println("ближе к началу алфавита");
                System.out.println("Повторите попытку!\n");
            }
        }while( answer != ch);
    }
}

// стр 143 Полное руководство
//Демонстрация работы цикла do-while
class DoWhile{
    public static void main(String[] args) {
        int n = 10;

        do {
            System.out.println("Импульс номер " + n);
//            n--;
//        }while (n > 0);
        }while (--n > 0);
    }
}

/*
В приведенном выше примере выражение (--n > О) объединяет декремент
n и проверку на равенство нулю в одно выражение. Вот как оно работает.
Сначала выполняется операция --n, декрементирующая n и возвращающая
новое значение n, которое затем сравнивается с нулем. Если оно больше нуля,
тогда цикл продолжается; в противном случае цикл завершается.
 */