package Exercise;

public class Chapter_1 {
    // 1) Байт-код Java — набор инструкций, исполняемых виртуальной машиной Java. В большинстве случаев байт-код Java генерируется для исполнения на виртуальной машине Java из исходного кода на языке Java. Единственный оригинальный компилятор, преобразующий код на языке Java в байт-код Java — это Javac, созданный компанией Sun Microsystems. Но поскольку все спецификации байт-кода Java доступны, существуют и сторонние компиляторы, генерирующие этот байт-код.

    // 2) Абстракция — отделение концепции от ее экземпляра; Полиморфизм — реализация задач одной и той же идеи разными способами; Наследование — способность объекта или класса базироваться на другом объекте или классе.

    // 3) Входной точкой в программу на языке Java является метод main, который определен в классе Program. Именно с него начинается выполнение программы. Он обязательно должен присутствовать в программе.

    // 4) Переменная представляет именованную область памяти, которая хранит значение определенного типа. Каждая переменная имеет тип, имя и значение. Тип определяет, какую информацию может хранить переменная или диапазон допустимых значений.

    /* 5) Какое из перечисленных ниже имен переменных недопустимо?
        A. count
        Б. $count --- Технически возможно,  однако это запрещено соглашением по оформлению кода
        B. count27
        Г. б7count --- не допустимо
    */

    // 6)  //-----однострочный комментарий,  /*.......*/ ----- многострочный комментарий

    /* 7) общая форма условной инструкции if , for
            if(условие) инструкция;
            for{инициализация; условие; итерация) инструкция;
    */

    // 8) одним ключевым элементом Java является блок кода. Он представ­ляет собой группу инструкций, находящихся между открывающей и закры­вающей фигурными скобками. В Java точка с запятой служит в качестве разделителя инструкций. Это озна­чает, что каждая инструкция должна оканчиваться точкой с запятой. Точка с за­пятой обозначает окончание одной логической единицы кода.Как вы уже знаете, блок кода — это совокупность логически связанных ин­струкций, помещаемых между открывающей и закрывающей фигурными скоб­ками. Блок не завершается точкой с запятой. Он представляет собой группу ин­струкций, и поэтому точка с запятой ставится в конце каждой инструкции, асам блок завершается лишь закрывающей фигурной скобкой.В Java конец строки не считается окончанием инструкции. Поэтому не имеетзначения, где именно он находится в строке кода.


    // 9)-----My_WeightOnTheMoon----- Сила тяжести на Луне составляет около 17% земной. Напишите программу, которая вычислила бы ваш вес на Луне.

    // 10)----InchesToMeters----- Видоизмените программу, созданную в упражнении 1.2, таким образом, чтобы она выводила таблицу перевода дюймов в метры. Выведите значения длины до 12 футов через каждый дюйм. После каждых 12 дюймов выведите пустую строку. (Один метр приблизительно равен 39,37 дюйма.)

    // 11)  Если вы наберете исходный код программы неправильно, то компилятор, пытаясь обработать этот код, выведет сообщение об ошибке. Компилятор Java следует формальным правилам, и поэтому стро­ка в исходном коде, на которую он указывает, не всегда соответствует истин­ному местоположению источника ошибки. Таким образом, если ваша программа содержит синтаксические ошибки, нестоит бездумно следовать рекомендациям компилятора. Сообщение об ошиб­ке составляется по формальным правилам, вам же нужно выяснять истинные причины ошибок. Желательно проанализировать строки кода программы, пред­шествующие строке, обозначенной компилятором. Иногда ошибку удается рас­познать лишь после анализа нескольких строк кода, следующих за той, в кото­рой она была на самом деле обнаружена.

    // 12) блок кода — это совокупность логически связанных ин­струкций, помещаемых между открывающей и закрывающей фигурными скоб­ками. Блок не завершается точкой с запятой. Он представляет собой группу ин­струкций, и поэтому точка с запятой ставится в конце каждой инструкции, а сам блок завершается лишь закрывающей фигурной скобкой. В Java конец строки не считается окончанием инструкции. Поэтому не имеет значения, где именно он находится в строке кода.
}
