1. Предположим, имеется следующий фрагмент кода:
class X {
    private int count;
Исходя из этого, допустим ли следующий код?
class Y {
    public static void main(String args[]) {
    X ob = new X ();
    ob.count = 10;

Нет. Закрытый (private) член недоступен за пределами своего класса.
-----------------------------------------------------------------------------

2. Модификатор доступа должен______________объявлению члена класса.
предшествовать
---------------------------------------------------------------------------
3.
Помимо очереди, в программах часто используется структура данных, ко-
торая называется стеком. Обращение к стеку осуществляется по принципу
“первым пришел — последним обслужен" . Стек можно сравнить со стоп-
кой тарелок, стоящих на столе. Последней берется тарелка, поставленная
на стол первой. Создайте класс Stack, реализующий стек для хранения
символов. Используйте методы push () и pop () для манипулирования со-
держимым стека. Пользователь класса Stack должен иметь возможность
задавать размер стека при его создании. Все члены класса Stack, кроме ме-
тодов push () и pop (), должны быть объявлены как private. (Подсказка: в
качестве заготовки можете воспользоваться классом Queue, изменив в нем
лишь способ доступа к данным.)

SDemo

-------------------------------------------------------------------------------
4.
 Предположим, имеется следующий класс:
class Test {
    int а;
Test(int i) {
    a = i;
    }
}
Напишите метод swap(), реализующий обмен содержимым между двумя
объектами типа Test, на которые ссылаются две переменные данного типа.
void swap(Test ob1, Test ob2) {
    int t;
    t = ob1.a;
    ob1.a = ob2.a;
    ob2.a = t;
}
-------------------------------------------------------------------------------------
5. Правильно ли написан следующий фрагмент кода?
class X {
    int meth(int a, int b) { ... }
    String meth(int a, int b) { ... }
Нет, неправильно. Перегружаемые методы могут возвращать значения раз-
ного типа, но это не играет никакой роли при разрешении ссылок на пере-
груженные версии. Перегружаемые методы должны иметь разные списки
параметров.

-------------------------------------------------------------------------------------
6. Напишите рекурсивный метод, отображающий строку задом наперед.

Backwards

-------------------------------------------------------------------------------------
7. Допустим, все объекты класса должны совместно использовать одну и ту же
переменную. Как объявить такую переменную?

Переменная, предназначенная для совместного использования, должна
быть объявлена как static .
-------------------------------------------------------------------------------------
8. Для чего может понадобиться статический блок?

Статический блок служит для выполнения любых инициализирующих дей-
ствий в классе до создания конкретных объектов.
-------------------------------------------------------------------------------------
9. Что такое внутренний класс?

Внутренний класс — это нестатический вложенный класс.
-------------------------------------------------------------------------------------
10. Допустим, требуется член класса, к которому могут обращаться только дру-
гие члены этого же класса. Какой модификатор доступа следует использо-
вать в его объявлении?

Модификатор доступа private .
-------------------------------------------------------------------------------------
11. Имя метода и список его параметров вместе составляют_____________метода.

сигнатуру
-------------------------------------------------------------------------------------
12. Если методу передается значение типа in t , то в этом случае используется
передача параметра п о _____________.

значению
-------------------------------------------------------------------------------------
13
Создайте метод sum (), имеющий список аргументов переменной длины и
предназначенный для суммирования передаваемых ему значений типа int.
Метод должен возвращать результат суммирования. Продемонстрируйте ра-
боту этого метода.
Существует множество вариантов решения данной задачи. Ниже представ-
лен один из них.

SumIt

-------------------------------------------------------------------------------------
14. Можно ли перегружать методы с переменным числом аргументов?

Да, можно.

-------------------------------------------------------------------------------------

15.
 Приведите пример вызова перегруженного метода с переменным числом
аргументов, демонстрирующий возникновение неоднозначности.
Ниже приведен один из вариантов перегружаемого метода с переменным
числом аргументов, при вызове которого возникает неоднозначность.
double myMeth(double ... v ) { // ...
double myMeth(double d, double ... v) { // ...
Если попытаться вызвать метод myMeth () с одним аргументом следующим
образом:
myMeth(1.1);
то компилятор не сможет определить, какой именно метод вызывается