Глава 8. Пакеты и интерфейсы 331

Создание интерфейса для очереди

Упражнение 8.1

    Для того чтобы продемонстрировать истинные возможности интерфейсов, обратимся к конкретному 
практическому примеру.  В  предыдущих главах был создан  классQueue, реализующий простую очередь 
фиксированного размера для хранения символов.  Но обеспечить функционирование очереди можно 
разными способами.  В частности, очередь может быть фиксированного размера или  “растущей”, 
линейной (т.е. переполняться по достижении верхней границы выделенной памяти) или кольцевой (в 
таком случае при удалении символов из очереди освобождается место для  новых элементов).  Кроме 
того, очередь может быть реализована на базе массива, связного списка, двоичного дерева и т.п. Как 
бы ни была реализована очередь, интерфейс для нее остается неизмененным, т.е. методы put ()  и get 
(), определяющие этот интерфейс, выполняют одинаковые действия независимо от внутренней 
организации очереди.  Поскольку интерфейс для очереди  не зависит от ее конкретной  реализации,  
его нетрудно определить, а конкретные детали разработать в каждой реализации очереди по 
отдельности.

В  этом упражнении  нам  предстоит сначала создать интерфейс для  очереди, хранящей символы, а 
затем реализовать его тремя способами. Во всех трех реализациях для  хранения  символов  будет  
использоваться  массив.  Одна  из очередей будет линейной и фиксированного размера, т.е. такая же, 
как и реализованная ранее. Вторая очередь будет кольцевой. В кольцевой очереди по достижении 
границ массива значения индексов будут автоматически изменяться таким образом, чтобы указывать на 
начало очереди. Таким образом, в кольцевую очередь можно будет поместить любое количество 
элементов, но при условии своевременного удаления элементов, включенных в нее ранее. И наконец, 
третья очередь будет динамической, т.е. ее размеры будут увеличиваться по мере необходимости. 
Поэтапный процесс создания программы описан ниже.